{
  "stackName": "full-stack",
  "clusterPrefix": "merlin-prod",
  "defaultDockerRegistry": "10.1.70.193:5000",
  "defaultDockerImageTag": "0.07.15",
  "traefikZoneName": "merlin.keyw",

  "dockerMachineDriverOptions": {
    "driver": "openstack",
    "engineInsecureRegistry": "10.1.70.193:5000",
    "openstackAuthUrl": "http://10.1.70.100:5000/v2.0",
    "openstackTenantName": "Newman",
    "openstackImageId": "47159a88-91d8-486a-8f4f-6aa10b9b02d8",
    "openstackSecGroups": "All",
    "openstackSshUser": "ubuntu",
    "openstackFloatingipPool": "external-penet",
    "openstackActiveTimeout":2000
  },
  "dockerMachines": {
    "common": {
    },
    "manager": {
      "nodeCount": 1,
      "nodeName": "managerNode",
      "openstackFlavorId": "d3ffcd13-b70d-4a43-8597-5f08c09ec42e",
      "engineLabels": {
        "role": "manager"
      }
    },
    "workers": [
      {
        "nodeCount": 3,
        "nodeName": "elasticsearchNode",
        "openstackFlavorId": "d3ffcd13-b70d-4a43-8597-5f08c09ec42e",
        "engineLabels": {
          "role": "worker",
          "affinity": "elasticsearchNode"
        }
      },
      {
        "nodeCount": 1,
        "nodeName": "postgresNode",
        "openstackFlavorId": "b082d9aa-8b47-4772-8c55-90636197105f",
        "engineLabels": {
          "role": "worker",
          "affinity": "postgresNode"
        }
      },
      {
        "nodeCount": 4,
        "nodeName": "sparkNode",
        "openstackFlavorId": "d3ffcd13-b70d-4a43-8597-5f08c09ec42e",
        "engineLabels": {
          "role": "worker",
          "affinity": "sparkNode"
        }
      },
      {
        "nodeCount": 2,
        "nodeName": "hdfsNode",
        "openstackFlavorId": "368f99e8-5ec0-4b3d-aa07-36679e514199",
        "engineLabels": {
          "role": "worker",
          "affinity": "hdfsNode"
        }
      },
      {
        "nodeCount": 1,
        "nodeName": "stagingServerNode",
        "openstackFlavorId": "d3ffcd13-b70d-4a43-8597-5f08c09ec42e",
        "engineLabels": {
          "role": "worker",
          "affinity": "stagingServerNode"
        }
      }
    ]
  },
  "dockerComposeYaml": {
    "version": "3.6",
    "networks": {
      "net": null
    },
    "configs": {
      "nginx-es-config": {
        "file": "../../config/nginx-elasticsearch.conf"
      },
      "nginx-es-head-config": {
        "file": "../../config/nginx-elasticsearch-head.conf"
      },
      "nginx-pgadmin4-config": {
        "file": "../../config/nginx-pgadmin4.conf"
      },
      "nginx-amino3-config": {
        "file": "../../config/nginx-amino3.conf"
      },
      "nginx-staging-config": {
        "file": "../../config/nginx-staging.conf"
      },
      "nginx-namenode-config": {
        "file": "../../config/nginx-namenode.conf"
      },
      "nginx-hdfs-config": {
        "file": "../../config/nginx-hdfs.conf"
      },
      "traefik-config": {
        "file": "../../config/traefik.toml"
      },
      "spark-defaults-config": {
        "file": "../../config/spark-defaults.conf"
      },
      "es-jvm-config": {
        "file": "../../config/jvm-openstack.options"
      },
      "es-yml": {
        "file": "../../config/elasticsearch.yml"
      }
    },
    "volumes": {
      "hadoop-datavolume": {
        "driver": "local",
        "driver_opts": {
          "type": "nfs",
          "device": ":/merlin-lts",
          "o": "rw,addr=10.1.70.252,proto=tcp,async,soft,nolock"
        }
      },
      "hadoop-logvolume": {
        "driver": "local",
        "driver_opts": {
          "type": "nfs",
          "device": ":/merlin-lts-logs",
          "o": "rw,addr=10.1.70.252,proto=tcp,async,soft,nolock"
        }
      },
      "pg-datavolume": {
        "driver": "local",
        "driver_opts": {
          "type": "nfs",
          "device": ":/merlin-lts/db/postgresql",
          "o": "rw,addr=10.1.70.252,proto=tcp,async,soft,nolock"
        }
      },
      "amino-uploads": {
        "driver": "local",
        "driver_opts": {
          "type": "nfs",
          "device": ":/merlin-lts/uploads",
          "o": "rw,addr=10.1.70.252,proto=tcp,async,soft,nolock"
        }
      },
      "elasticsearch-datavolume0": {
        "driver": "local",
        "driver_opts": {
          "type": "nfs",
          "device": ":/merlin-lts/db/es1",
          "o": "rw,addr=10.1.70.252,proto=tcp,async,soft,nolock"
        }
      },
      "elasticsearch-datavolume1": {
        "driver": "local",
        "driver_opts": {
          "type": "nfs",
          "device": ":/merlin-lts/db/es2",
          "o": "rw,addr=10.1.70.252,proto=tcp,async,soft,nolock"
        }
      },
      "elasticsearch-datavolume2": {
        "driver": "local",
        "driver_opts": {
          "type": "nfs",
          "device": ":/merlin-lts/db/es3",
          "o": "rw,addr=10.1.70.252,proto=tcp,async,soft,nolock"
        }
      }
    },
    "services": {
      "namenode": {
        "image": "merlin-hadoop-base-alpine",
        "environment": [
          "HADOOP_MACHINE_ROLE=namenode"
        ],
        "configs": [
          {
            "source": "spark-defaults-config",
            "target": "/usr/local/spark/conf/spark-defaults.conf"
          }
        ],
        "deploy": {
          "replicas": 1,
          "restart_policy": {
            "condition": "on-failure"
          },
          "placement": {
            "constraints": [
              "engine.labels.role==manager"
            ]
          },
          "labels": [
            "traefik.enable=true",
            "traefik.namenode.port=8088",
            "traefik.namenode.frontend.rule=Host:namenode.parrot-aws.keyw",
            "traefik.hdfs.port=50070",
            "traefik.hdfs.frontend.rule=Host:hdfs.parrot-aws.keyw"
          ]
        },
        "volumes": [
          {
            "type": "volume",
            "source": "hadoop-datavolume",
            "target": "/mnt/merlin",
            "volume": {
              "nocopy": true
            }
          },
          {
            "type": "volume",
            "source": "hadoop-logvolume",
            "target": "/mnt/logs",
            "volume": {
              "nocopy": true
            }
          }
        ],
        "networks": [
          "net"
        ]
      },
      "datanode": {
        "image": "merlin-hadoop-base-alpine",
        "environment": [
          "HADOOP_MACHINE_ROLE=datanode"
        ],
        "configs": [
          {
            "source": "spark-defaults-config",
            "target": "/usr/local/spark/conf/spark-defaults.conf"
          }
        ],
        "deploy": {
          "replicas": 2,
          "restart_policy": {
            "condition": "on-failure"
          },
          "placement": {
            "constraints": [
              "engine.labels.affinity==hdfsNode"
            ]
          },
          "labels": [
            "traefik.enable=false"
          ]
        },
        "volumes": [
          {
            "type": "volume",
            "source": "hadoop-datavolume",
            "target": "/mnt/merlin",
            "volume": {
              "nocopy": true
            }
          },
          {
            "type": "volume",
            "source": "hadoop-logvolume",
            "target": "/mnt/logs",
            "volume": {
              "nocopy": true
            }
          }
        ],
        "networks": [
          "net"
        ]
      },
      "sparkworker": {
        "image": "merlin-hadoop-base-alpine",
        "environment": [
          "HADOOP_MACHINE_ROLE=sparkworker"
        ],
        "configs": [
          {
            "source": "spark-defaults-config",
            "target": "/usr/local/spark/conf/spark-defaults.conf"
          }
        ],
        "deploy": {
          "replicas": 4,
          "restart_policy": {
            "condition": "on-failure"
          },
          "placement": {
            "constraints": [
              "engine.labels.affinity==sparkNode"
            ]
          },
          "labels": [
            "traefik.enable=false"
          ]
        },
        "volumes": [
          {
            "type": "volume",
            "source": "hadoop-datavolume",
            "target": "/mnt/merlin",
            "volume": {
              "nocopy": true
            }
          },
          {
            "type": "volume",
            "source": "hadoop-logvolume",
            "target": "/mnt/logs",
            "volume": {
              "nocopy": true
            }
          }
        ],
        "networks": [
          "net"
        ]
      },
      "stagingserver": {
        "image": "merlin-hadoop-base-alpine",
        "environment": [
          "HADOOP_MACHINE_ROLE=stagingserver"
        ],
        "configs": [
          {
            "source": "spark-defaults-config",
            "target": "/usr/local/spark/conf/spark-defaults.conf"
          }
        ],
        "deploy": {
          "replicas": 1,
          "restart_policy": {
            "condition": "on-failure"
          },
          "placement": {
            "constraints": [
              "engine.labels.affinity==stagingServerNode"
            ]
          },
          "labels": [
            "traefik.jupyter.port=9999",
            "traefik.jupyter.frontend.rule=Host:jupyter.parrot-aws.keyw",
            "traefik.jupyter.backend.loadbalancer.stickiness=true"
          ]
        },
        "volumes": [
          {
            "type": "volume",
            "source": "hadoop-datavolume",
            "target": "/mnt/merlin",
            "volume": {
              "nocopy": true
            }
          },
          {
            "type": "volume",
            "source": "hadoop-logvolume",
            "target": "/mnt/logs",
            "volume": {
              "nocopy": true
            }
          }
        ],
        "networks": [
          "net"
        ]
      },
      "pgadmin4": {
        "environment": [
          "HOPE=SpringsEternal"
        ],
        "deploy": {
          "replicas": 1,
          "restart_policy": {
            "condition": "on-failure"
          },
          "placement": {
            "constraints": [
              "engine.labels.role==manager"
            ]
          },
          "labels": [
            "traefik.port=5050"
          ]
        },
        "networks": [
          "net"
        ]
      },
      "amino3": {
        "environment": [
          "AMINO3_REPLACE_BAD_DATA_SOURCE_WITH_MEMORY_DATA_SOURCE=false"
        ],
        "deploy": {
          "replicas": 1,
          "restart_policy": {
            "condition": "on-failure"
          },
          "placement": {
            "constraints": [
              "engine.labels.role==manager"
            ]
          },
          "labels": [
            "traefik.port=3000",
            "traefik.backend.loadbalancer.stickiness=true"
          ]
        },
        "networks": [
          "net"
        ]
      },
      "postgres": {
        "environment": [
          "POSTGRES_PASSWORD=password"
        ],
        "deploy": {
          "replicas": 1,
          "restart_policy": {
            "condition": "on-failure"
          },
          "placement": {
            "constraints": [
              "engine.labels.affinity==postgresNode"
            ]
          }
        },
        "ports": [
          "5432:5432"
        ],
        "volumes": [
          {
            "type": "volume",
            "source": "pg-datavolume",
            "target": "/var/lib/postgresql/data",
            "volume": {
              "nocopy": false
            }
          }
        ],
        "networks": [
          "net"
        ]
      },
      "traefik": {
        "environment": [
          "HOPE=SpringsEternal"
        ],
        "volumes": [
          {
            "type": "bind",
            "source": "/var/run/docker.sock",
            "target": "/var/run/docker.sock"
          }
        ],
        "configs": [
          {
            "source": "traefik-config",
            "target": "/etc/traefik/traefik.toml"
          }
        ],
        "ports": [
          "80:80",
          "8080:8080"
        ],
        "networks": [
          "net"
        ],
        "deploy": {
          "replicas": 1,
          "restart_policy": {
            "condition": "on-failure"
          },
          "placement": {
            "constraints": [
              "engine.labels.role==manager"
            ]
          },
          "labels": [
            "traefik.enable=false"
          ]
        }
      },
      "elasticsearch-head": {
        "environment": [
          "HOPE=SpringsEternal"
        ],
        "deploy": {
          "replicas": 1,
          "restart_policy": {
            "condition": "on-failure"
          },
          "placement": {
            "constraints": [
              "engine.labels.role==manager"
            ]
          },
          "labels": [
            "traefik.port=9100"
          ]
        },
        "networks": [
          "net"
        ]
      },
      "elasticsearch": {
        "image": "elasticsearch",
        "environment": [
          "HOPE=SpringsEternal"
        ],
        "deploy": {
          "replicas": 1,
          "restart_policy": {
            "condition": "on-failure"
          },
          "placement": {
            "constraints": [
              "engine.labels.affinity==elasticsearchNode"
            ]
          },
          "labels": [
            "traefik.port=9200"
          ]
        },
        "volumes": [
          {
            "type": "volume",
            "source": "elasticsearch-datavolume0",
            "target": "/usr/share/elasticsearch/data",
            "volume": {
              "nocopy": false
            }
          }
        ],
        "configs": [
          {
            "source": "es-jvm-config",
            "target": "/usr/share/elasticsearch/config/jvm.options"
          },
          {
            "source": "es-yml",
            "target": "/usr/share/elasticsearch/config/elasticsearch.yml"
          }
        ],
        "networks": [
          "net"
        ]
      },
      "elasticsearch1": {
        "image": "elasticsearch",
        "environment": [
          "HOPE=SpringsEternal"
        ],
        "deploy": {
          "replicas": 1,
          "restart_policy": {
            "condition": "on-failure"
          },
          "placement": {
            "constraints": [
              "engine.labels.affinity==elasticsearchNode"
            ]
          }
        },
        "volumes": [
          {
            "type": "volume",
            "source": "elasticsearch-datavolume1",
            "target": "/usr/share/elasticsearch/data",
            "volume": {
              "nocopy": false
            }
          }
        ],
        "configs": [
          {
            "source": "es-jvm-config",
            "target": "/usr/share/elasticsearch/config/jvm.options"
          },
          {
            "source": "es-yml",
            "target": "/usr/share/elasticsearch/config/elasticsearch.yml"
          }
        ],
        "networks": [
          "net"
        ]
      },
      "elasticsearch2": {
        "image": "elasticsearch",
        "environment": [
          "HOPE=SpringsEternal"
        ],
        "deploy": {
          "replicas": 1,
          "restart_policy": {
            "condition": "on-failure"
          },
          "placement": {
            "constraints": [
              "engine.labels.affinity==elasticsearchNode"
            ]
          }
        },
        "volumes": [
          {
            "type": "volume",
            "source": "elasticsearch-datavolume2",
            "target": "/usr/share/elasticsearch/data",
            "volume": {
              "nocopy": false
            }
          }
        ],
        "configs": [
          {
            "source": "es-jvm-config",
            "target": "/usr/share/elasticsearch/config/jvm.options"
          },
          {
            "source": "es-yml",
            "target": "/usr/share/elasticsearch/config/elasticsearch.yml"
          }
        ],
        "networks": [
          "net"
        ]
      },
      "nginx": {
        "configs": [
          {
            "source": "nginx-staging-config",
            "target": "/etc/nginx/conf.d/nginx-staging.conf"
          },
          {
            "source": "nginx-amino3-config",
            "target": "/etc/nginx/conf.d/nginx-amino3.conf"
          },
          {
            "source": "nginx-es-head-config",
            "target": "/etc/nginx/conf.d/nginx-elasticsearch-head.conf"
          },
          {
            "source": "nginx-es-config",
            "target": "/etc/nginx/conf.d/nginx-elasticsearch.conf"
          },
          {
            "source": "nginx-hdfs-config",
            "target": "/etc/nginx/conf.d/nginx-hdfs.conf"
          },
          {
            "source": "nginx-namenode-config",
            "target": "/etc/nginx/conf.d/nginx-namenode.conf"
          },
          {
            "source": "nginx-pgadmin4-config",
            "target": "/etc/nginx/conf.d/nginx-pgadmin4.conf"
          }
        ],
        "deploy": {
          "replicas": 1,
          "restart_policy": {
            "condition": "on-failure"
          },
          "placement": {
            "constraints": [
              "engine.labels.role==manager"
            ]
          }
        },
        "ports": [
          "9200:9200",
          "9100:9100",
          "3000:3000",
          "8088:8088",
          "50070:50070",
          "5050:5050",
          "9999:9999"
        ],
        "networks": [
          "net"
        ]
      }
    }
  }
}

