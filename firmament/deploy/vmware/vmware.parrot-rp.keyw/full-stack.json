{
  "stackName": "full-stack-merlin",
  "clusterPrefix": "merlin-rp",
  "hostMachineDnsServer": "192.168.104.100",
  "workerHostCount": 1,
  "dockerMachineWorkerOptions": {
    "engineLabel": "role=worker"
  },
  "dockerMachineMasterOptions": {
    "engineLabel": "role=master"
  },
  "dockerMachineDriverOptions": {
    "engineInsecureRegistry": "docker-registry.parrot-rp.keyw:5000",
    "vmwarevsphereBoot2dockerUrl": "https://s3.amazonaws.com/merlin-jreeme/boot2docker.iso",
    "driver": "vmwarevsphere",
    "vmwarevsphereUsername": "root",
    "vmwarevspherePassword": "run2walk!",
    "vmwarevsphereDatastore": "datastore1",
    "vmwarevsphereCpuCount": 2,
    "vmwarevsphereDiskSize": 40000,
    "vmwarevsphereMemorySize": 16384,
    "vmwarevsphereVcenter": "vmware.parrot-rp.keyw"
  },
  "dockerComposeYaml": {
    "version": "3.6",
    "networks": {
      "net": null
    },
    "configs": {
      "nginx-elasticsearch-config": {
        "file": "../../config/nginx-elasticsearch.conf"
      },
      "nginx-elasticsearch-head-config": {
        "file": "../../config/nginx-elasticsearch-head.conf"
      },
      "nginx-pgadmin4-config": {
        "file": "../../config/nginx-pgadmin4.conf"
      },
      "nginx-amino3-config": {
        "file": "../../config/nginx-amino3.conf"
      },
      "nginx-namenode-config": {
        "file": "../../config/nginx-namenode.conf"
      },
      "nginx-hdfs-config": {
        "file": "../../config/nginx-hdfs.conf"
      },
      "nginx-traefik-config": {
        "file": "../../config/nginx-traefik.conf"
      },
      "traefik-config": {
        "file": "../../config/traefik.toml"
      }
    },
    "volumes": {
      "dns-bind-conf-volume": {
        "driver": "local",
        "driver_opts": {
          "type": "nfs",
          "device": ":/nfs-public/reeme/dns-bind-conf-volume",
          "o": "rw,addr=nfs.parrot-rp.keyw,proto=tcp,async,soft,nolock"
        }
      },
      "dns-bind-data-volume": {
        "driver": "local",
        "driver_opts": {
          "type": "nfs",
          "device": ":/nfs-public/reeme/dns-bind-data-volume",
          "o": "rw,addr=nfs.parrot-rp.keyw,proto=tcp,async,soft,nolock"
        }
      },
      "pg-datavolume": {
        "driver": "local",
        "driver_opts": {
          "type": "nfs",
          "device": ":/nfs-public/reeme/postgres",
          "o": "rw,addr=nfs.parrot-rp.keyw,proto=tcp,async,soft,nolock"
        }
      },
      "elasticsearch-datavolume0": {
        "driver": "local",
        "driver_opts": {
          "type": "nfs",
          "device": ":/nfs-public/reeme/elasticsearch0",
          "o": "rw,addr=nfs.parrot-rp.keyw,proto=tcp,async,soft,nolock"
        }
      },
      "elasticsearch-datavolume1": {
        "driver": "local",
        "driver_opts": {
          "type": "nfs",
          "device": ":/nfs-public/reeme/elasticsearch1",
          "o": "rw,addr=nfs.parrot-rp.keyw,proto=tcp,async,soft,nolock"
        }
      },
      "elasticsearch-datavolume2": {
        "driver": "local",
        "driver_opts": {
          "type": "nfs",
          "device": ":/nfs-public/reeme/elasticsearch2",
          "o": "rw,addr=nfs.parrot-rp.keyw,proto=tcp,async,soft,nolock"
        }
      },
      "hadoop-datavolume": {
        "driver": "local",
        "driver_opts": {
          "type": "nfs",
          "device": ":/nfs-public/reeme/hadoop-datavolume",
          "o": "rw,addr=nfs.parrot-rp.keyw,proto=tcp,async,soft,nolock"
        }
      },
      "hadoop-logvolume": {
        "driver": "local",
        "driver_opts": {
          "type": "nfs",
          "device": ":/nfs-public/reeme/hadoop-logvolume",
          "o": "rw,addr=nfs.parrot-rp.keyw,proto=tcp,async,soft,nolock"
        }
      }
    },
    "services": {
      "dns-bind": {
        "image": "docker-registry.parrot-rp.keyw:5000/dns-bind:0.07.13",
        "environment": [
          "HOPE=SpringsEternal"
        ],
        "deploy": {
          "replicas": 1,
          "restart_policy": {
            "condition": "on-failure"
          },
          "placement": {
            "constraints": [
              "node.role == manager"
            ]
          },
          "labels": [
            "traefik.enable=false"
          ]
        },
        "ports": [
          "10000:10000",
          "53:53",
          "53:53/udp"
        ],
        "volumes": [
          {
            "type": "volume",
            "source": "dns-bind-conf-volume",
            "target": "/etc/bind",
            "volume": {
              "nocopy": false
            }
          },
          {
            "type": "volume",
            "source": "dns-bind-data-volume",
            "target": "/var/bind",
            "volume": {
              "nocopy": false
            }
          }
        ],
        "networks": [
          "net"
        ]
      },
      "pgadmin4": {
        "image": "docker-registry.parrot-rp.keyw:5000/pgadmin4:0.07.13",
        "environment": [
          "HOPE=SpringsEternal"
        ],
        "deploy": {
          "replicas": 1,
          "restart_policy": {
            "condition": "on-failure"
          },
          "placement": {
            "constraints": [
              "node.role == manager"
            ]
          },
          "labels": [
            "traefik.enable=true",
            "traefik.port=5050",
            "traefik.backend=pgadmin4",
            "traefik.frontend.rule=Host: pgadmin4.parrot-rp.keyw"
          ]
        },
        "volumes": [
          {
            "type": "volume",
            "source": "pg-datavolume",
            "target": "/var/lib/postgresql/data",
            "volume": {
              "nocopy": false
            }
          }
        ],
        "networks": [
          "net"
        ]
      },
      "amino3": {
        "image": "docker-registry.parrot-rp.keyw:5000/amino3:0.07.13",
        "environment": [
          "AMINO3_REPLACE_BAD_DATA_SOURCE_WITH_MEMORY_DATA_SOURCE=false"
        ],
        "deploy": {
          "replicas": 1,
          "restart_policy": {
            "condition": "on-failure"
          },
          "placement": {
            "constraints": [
              "node.role == worker"
            ]
          },
          "labels": [
            "traefik.enable=true",
            "traefik.port=3000",
            "traefik.backend=amino3",
            "traefik.backend.loadbalancer.stickiness=true",
            "traefik.frontend.rule=Host: amino3.parrot-rp.keyw"
          ]
        },
        "networks": [
          "net"
        ]
      },
      "postgres": {
        "image": "docker-registry.parrot-rp.keyw:5000/postgres:0.07.13",
        "environment": [
          "POSTGRES_PASSWORD=password"
        ],
        "deploy": {
          "replicas": 1,
          "restart_policy": {
            "condition": "on-failure"
          },
          "placement": {
            "constraints": [
              "node.role == manager"
            ]
          },
          "labels": [
            "traefik.enable=true",
            "traefik.port=5432",
            "traefik.backend=postgres",
            "traefik.frontend.rule=Host: postgres.parrot-rp.keyw"
          ]
        },
        "volumes": [
          {
            "type": "volume",
            "source": "pg-datavolume",
            "target": "/var/lib/postgresql/data",
            "volume": {
              "nocopy": false
            }
          }
        ],
        "networks": [
          "net"
        ]
      },
      "traefik": {
        "image": "docker-registry.parrot-rp.keyw:5000/traefik:0.07.13",
        "environment": [
          "HOPE=SpringsEternal"
        ],
        "volumes": [
          {
            "type": "bind",
            "source": "/var/run/docker.sock",
            "target": "/var/run/docker.sock"
          }
        ],
        "configs": [
          {
            "source": "traefik-config",
            "target": "/etc/traefik/traefik.toml"
          }
        ],
        "ports": [
          "80:80",
          "8080:8080"
        ],
        "networks": [
          "net"
        ],
        "deploy": {
          "replicas": 1,
          "restart_policy": {
            "condition": "on-failure"
          },
          "placement": {
            "constraints": [
              "node.role == manager"
            ]
          },
          "labels": [
            "traefik.enable=false"
          ]
        }
      },
      "elasticsearch-head": {
        "image": "docker-registry.parrot-rp.keyw:5000/elasticsearch-head:0.07.13",
        "environment": [
          "HOPE=SpringsEternal"
        ],
        "deploy": {
          "replicas": 1,
          "restart_policy": {
            "condition": "on-failure"
          },
          "placement": {
            "constraints": [
              "node.role == manager"
            ]
          },
          "labels": [
            "traefik.enable=true",
            "traefik.port=9100",
            "traefik.backend=elasticsearch-head",
            "traefik.frontend.rule=Host: elasticsearch-head.parrot-rp.keyw"
          ]
        },
        "networks": [
          "net"
        ]
      },
      "elasticsearch": {
        "image": "docker-registry.parrot-rp.keyw:5000/elasticsearch:0.07.13",
        "environment": [
          "HOPE=SpringsEternal"
        ],
        "deploy": {
          "replicas": 1,
          "restart_policy": {
            "condition": "on-failure"
          },
          "placement": {
            "constraints": [
              "node.role == manager"
            ]
          },
          "labels": [
            "traefik.enable=true",
            "traefik.port=9200",
            "traefik.backend=elasticsearch",
            "traefik.frontend.rule=Host: elasticsearch.parrot-rp.keyw"
          ]
        },
        "volumes": [
          {
            "type": "volume",
            "source": "elasticsearch-datavolume0",
            "target": "/usr/share/elasticsearch/data",
            "volume": {
              "nocopy": false
            }
          }
        ],
        "networks": [
          "net"
        ]
      },
      "elasticsearch1": {
        "image": "docker-registry.parrot-rp.keyw:5000/elasticsearch:0.07.13",
        "environment": [
          "HOPE=SpringsEternal"
        ],
        "deploy": {
          "replicas": 1,
          "restart_policy": {
            "condition": "on-failure"
          },
          "placement": {
            "constraints": [
              "node.role == worker"
            ]
          }
        },
        "volumes": [
          {
            "type": "volume",
            "source": "elasticsearch-datavolume1",
            "target": "/usr/share/elasticsearch/data",
            "volume": {
              "nocopy": false
            }
          }
        ],
        "networks": [
          "net"
        ]
      },
      "elasticsearch2": {
        "image": "docker-registry.parrot-rp.keyw:5000/elasticsearch:0.07.13",
        "environment": [
          "HOPE=SpringsEternal"
        ],
        "deploy": {
          "replicas": 1,
          "restart_policy": {
            "condition": "on-failure"
          },
          "placement": {
            "constraints": [
              "node.role == worker"
            ]
          }
        },
        "volumes": [
          {
            "type": "volume",
            "source": "elasticsearch-datavolume2",
            "target": "/usr/share/elasticsearch/data",
            "volume": {
              "nocopy": false
            }
          }
        ],
        "networks": [
          "net"
        ]
      },
      "namenode": {
        "image": "docker-registry.parrot-rp.keyw:5000/merlin-hadoop-base-alpine:0.07.13",
        "environment": [
          "HADOOP_MACHINE_ROLE=namenode"
        ],
        "deploy": {
          "replicas": 1,
          "restart_policy": {
            "condition": "on-failure"
          },
          "placement": {
            "constraints": [
              "node.role == manager"
            ]
          },
          "labels": [
            "traefik.enable=true",
            "traefik.port=8088",
            "traefik.backend=namenode",
            "traefik.frontend.rule=Host: namenode.parrot-rp.keyw"
          ]
        },
        "volumes": [
          {
            "type": "volume",
            "source": "hadoop-datavolume",
            "target": "/mnt/merlin",
            "volume": {
              "nocopy": true
            }
          },
          {
            "type": "volume",
            "source": "hadoop-logvolume",
            "target": "/mnt/logs",
            "volume": {
              "nocopy": true
            }
          }
        ],
        "networks": [
          "net"
        ]
      },
      "datanode": {
        "image": "docker-registry.parrot-rp.keyw:5000/merlin-hadoop-base-alpine:0.07.13",
        "environment": [
          "HADOOP_MACHINE_ROLE=datanode"
        ],
        "deploy": {
          "replicas": 1,
          "restart_policy": {
            "condition": "on-failure"
          },
          "placement": {
            "constraints": [
              "node.role == worker"
            ]
          },
          "labels": [
            "traefik.enable=false"
          ]
        },
        "volumes": [
          {
            "type": "volume",
            "source": "hadoop-datavolume",
            "target": "/mnt/merlin",
            "volume": {
              "nocopy": true
            }
          },
          {
            "type": "volume",
            "source": "hadoop-logvolume",
            "target": "/mnt/logs",
            "volume": {
              "nocopy": true
            }
          }
        ],
        "networks": [
          "net"
        ]
      },
      "sparkworker": {
        "image": "docker-registry.parrot-rp.keyw:5000/merlin-hadoop-base-alpine:0.07.13",
        "environment": [
          "HADOOP_MACHINE_ROLE=sparkworker"
        ],
        "deploy": {
          "replicas": 1,
          "restart_policy": {
            "condition": "on-failure"
          },
          "placement": {
            "constraints": [
              "node.role == worker"
            ]
          },
          "labels": [
            "traefik.enable=false"
          ]
        },
        "volumes": [
          {
            "type": "volume",
            "source": "hadoop-datavolume",
            "target": "/mnt/merlin",
            "volume": {
              "nocopy": true
            }
          },
          {
            "type": "volume",
            "source": "hadoop-logvolume",
            "target": "/mnt/logs",
            "volume": {
              "nocopy": true
            }
          }
        ],
        "networks": [
          "net"
        ]
      },
      "stagingserver": {
        "image": "docker-registry.parrot-rp.keyw:5000/merlin-hadoop-base-alpine:0.07.13",
        "environment": [
          "HADOOP_MACHINE_ROLE=stagingserver"
        ],
        "deploy": {
          "replicas": 1,
          "restart_policy": {
            "condition": "on-failure"
          },
          "placement": {
            "constraints": [
              "node.role == worker"
            ]
          },
          "labels": [
            "traefik.enable=false"
          ]
        },
        "volumes": [
          {
            "type": "volume",
            "source": "hadoop-datavolume",
            "target": "/mnt/merlin",
            "volume": {
              "nocopy": true
            }
          },
          {
            "type": "volume",
            "source": "hadoop-logvolume",
            "target": "/mnt/logs",
            "volume": {
              "nocopy": true
            }
          }
        ],
        "networks": [
          "net"
        ]
      },
      "nginx": {
        "image": "docker-registry.parrot-rp.keyw:5000/nginx:0.07.13",
        "configs": [
          {
            "source": "nginx-elasticsearch-config",
            "target": "/etc/nginx/conf.d/nginx-elasticsearch.conf"
          },
          {
            "source": "nginx-elasticsearch-head-config",
            "target": "/etc/nginx/conf.d/nginx-elasticsearch-head.conf"
          },
          {
            "source": "nginx-pgadmin4-config",
            "target": "/etc/nginx/conf.d/nginx-pgadmin4.conf"
          },
          {
            "source": "nginx-amino3-config",
            "target": "/etc/nginx/conf.d/nginx-amino3.conf"
          },
          {
            "source": "nginx-namenode-config",
            "target": "/etc/nginx/conf.d/nginx-namenode.conf"
          },
          {
            "source": "nginx-hdfs-config",
            "target": "/etc/nginx/conf.d/nginx-hdfs.conf"
          },
          {
            "source": "nginx-traefik-config",
            "target": "/etc/nginx/conf.d/nginx-traefik.conf"
          }
        ],
        "deploy": {
          "replicas": 1,
          "restart_policy": {
            "condition": "on-failure"
          },
          "placement": {
            "constraints": [
              "node.role == manager"
            ]
          }
        },
        "ports": [
          "80:80",
          "9200:9200",
          "9100:9100",
          "3000:3000",
          "8088:8088",
          "50070:50070",
          "5050:5050"
        ],
        "networks": [
          "net"
        ]
      }
    }
  }
}

